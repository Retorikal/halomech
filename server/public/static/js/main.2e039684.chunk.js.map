{"version":3,"sources":["context/Auth.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","AuthContextProvider","props","state","ready","motor_id","data_time","data_rpm","data_vib","data_mil","set_id","id","a","setState","populate","get_rpm","get_vib","get_mil","get_time","this","get_data","rpm","i","length","data","time","slice","vib","mil","reverse","targetData","url","init","method","mode","headers","body","JSON","stringify","motor","fetch","response","json","status","console","log","Provider","value","children","Component","Content","useState","onMotorChange","dataRpm","onRpmChange","dataVib","onVibChange","dataMil","onMilChange","dataTime","onTimeChange","auth","useContext","getMotor","chartOpt","responsive","plugins","legend","display","scales","y","ticks","color","x","rpmstate","labels","fontColor","datasets","backgroundColor","borderColor","borderWidth","milstate","vibstate","className","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","Button","onClick","Container","Card","Body","Title","height","options","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e039684.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { createContext, useContext } from \"react\";\n\nexport const AuthContext = createContext();\n\nexport const UseAuth = () => useContext(AuthContext);\n\nexport default class AuthContextProvider extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t // True if mounting finishes\n\t\t\tready: false,\n\n\t\t\t// motor information\n\t\t\tmotor_id: \"\",\n\t\t\tdata_time: [],\n\t\t\tdata_rpm: [],\n\t\t\tdata_vib: [],\n\t\t\tdata_mil: [],\n\n\t\t\t// Exposed functions\n\t\t\tset_id: async (id) => {\n\t\t\t\tthis.setState({ motor_id: id });\n\t\t\t},\n\t\t\tpopulate: async () => {\n\t\t\t\treturn await this.populate();\n\t\t\t},\n\t\t\tget_rpm: () => {\n\t\t\t\treturn this.state.data_rpm;\n\t\t\t},\n\t\t\tget_vib: () => {\n\t\t\t\treturn this.state.data_vib;\n\t\t\t},\n\t\t\tget_mil: () => {\n\t\t\t\treturn this.state.data_mil;\n\t\t\t},\n\t\t\tget_time: () => {\n\t\t\t\treturn this.state.data_time;\n\t\t\t},\n\t\t};\n\t}\n\n\t// Fetch all relevant data and put to place\n\tasync populate(){\n\t\tlet data_rpm = [];\n\t\tlet data_mil = [];\n\t\tlet data_vib = [];\n\t\tlet data_time = [];\n\n\t\tlet rpm = await this.get_data(this.state.motor_id, \"rpm\");\t\n\n\t\tfor(let i = 0; i < rpm.length; i++){\n\t\t\tdata_rpm[i] = rpm[i].data;\n\t\t\tdata_time[i] = rpm[i].time.slice(11,16);\n\t\t}\n\n\t\tlet vib = await this.get_data(this.state.motor_id, \"vib\");\t\n\n\t\tfor(let i = 0; i < vib.length; i++){\n\t\t\tdata_vib[i] = vib[i].data;\n\t\t}\n\n\t\tlet mil = await this.get_data(this.state.motor_id, \"mil\");\t\n\n\t\tfor(let i = 0; i < mil.length; i++){\n\t\t\tdata_mil[i] = mil[i].data;\n\t\t}\n\n\t\tawait this.setState({\n\t\t\tdata_rpm: data_rpm.reverse(),\n\t\t\tdata_vib: data_vib.reverse(),\n\t\t\tdata_mil: data_mil.reverse(),\n\t\t\tdata_time: data_time.reverse()\n\t\t});\n\t}\n\n\t// Get motor data\n\tasync get_data(id, targetData) {\n\t\t// Takes signup information: email, password, first_name, last_name\n\t\tlet url = `/api/${targetData}`;\n\t\tlet init = {\n\t\t\tmethod: \"POST\",\n\t\t\tmode: \"cors\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({motor: id}),\n\t\t};\n\t\tlet response = await fetch(url, init);\n\t\tlet data = \"\";\n\n\t\tdata = await response.json();\n\n\t\tif (response.status >= 400) {\n\t\t\tconsole.log(response)\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn data;\n\t\t}\n\t}\n\n\trender() {\n\t    return (\n\t      <AuthContext.Provider value={this.state}>\n\t        {this.props.children}\n\t      </AuthContext.Provider>\n\t    );\n\t  }\n\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, Component } from \"react\";\nimport AuthContextProvider, { UseAuth } from \"context/Auth\";\n\nimport logo from 'logo.svg';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\n\nimport {Line} from 'react-chartjs-2';\n\nimport 'App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction Content(props) {\n  const [motor, onMotorChange] = useState(\"\");\n  const [dataRpm, onRpmChange] = useState([]);\n  const [dataVib, onVibChange] = useState([]);\n  const [dataMil, onMilChange] = useState([]);\n  const [dataTime, onTimeChange] = useState([]);\n  \n  const auth = UseAuth();\n  \n  const getMotor = async () => {\n    await auth.set_id(motor);\n    await auth.populate(motor);\n    onRpmChange(auth.get_rpm());\n    onVibChange(auth.get_vib());\n    onMilChange(auth.get_mil());\n    onTimeChange(auth.get_time());\n  }\n\n  const chartOpt = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales:{\n      y: {\n        ticks: {\n            color: \"white\",\n        }\n      },\n      x: {\n        ticks: {\n            color: \"white\",\n        }\n      }\n    }\n  }\n\n  let rpmstate = {\n    labels: dataTime,\n    fontColor: '#fff',\n    datasets: [{\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(255,255,255,1)',\n        borderWidth: 2,\n        data: dataRpm\n    }]\n  }\n\n  let milstate = {\n    labels: dataTime,\n    fontColor: '#fff',\n    datasets: [{\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(255,255,255,1)',\n        borderWidth: 2,\n        data: dataMil\n    }]\n  }\n\n  let vibstate = {\n    labels: dataTime,\n    fontColor: '#fff',\n    datasets: [{\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(255,255,255,1)',\n        borderWidth: 2,\n        data: dataVib\n    }]\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">HALOMech</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\"/>\n          <Form inline>\n            <FormControl \n              type=\"text\" \n              placeholder=\"Motor name\" \n              className=\"mr-sm-2\" \n              onChange = {(e) => {onMotorChange(e.target.value)}}/>\n            <Button variant=\"outline-success\" onClick={getMotor}>Change</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Container className=\"content bg-light\">\n        <Card className=\"bg-dark text-white my-2\"> \n          <Card.Body>\n            <Card.Title>RPM</Card.Title>\n            <Line\n              height={100}\n              options={chartOpt}\n              data={rpmstate}\n            />\n          </Card.Body>\n        </Card>\n\n        <Card className=\"bg-dark text-white my-2\"> \n          <Card.Body>\n            <Card.Title>Mileage (m)</Card.Title>\n            <Line\n              height={100}\n              options={chartOpt}\n              data={milstate}\n            />\n          </Card.Body>\n        </Card>\n\n        <Card className=\"bg-dark text-white my-2\"> \n          <Card.Body>\n            <Card.Title>Vibration</Card.Title>\n            <Line\n              height={100}\n              options={chartOpt}\n              data={vibstate}\n            />\n\n          </Card.Body>\n          <Card.Footer >\n            <Button variant=\"primary\">\n              Get vibration analysis\n            </Button>\n          </Card.Footer>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n\nfunction App(props) {\n  return (\n    <AuthContextProvider>\n      <Content/>  \n    </AuthContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AuthContextProvider from \"context/Auth.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}